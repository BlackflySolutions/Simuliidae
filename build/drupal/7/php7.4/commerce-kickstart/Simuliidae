ARG REPOSITORY_FROM=
# default to starting from the base image, without Drupal
ARG IMAGE_FROM=
# first build the web service
FROM ${REPOSITORY_FROM}${IMAGE_FROM} as vhttp

ENV CK_VERSION 7.x-2.75
RUN set -eux; \
        curl -fSL "https://ftp.drupal.org/files/projects/commerce_kickstart-${CK_VERSION}-core.tar.gz" -o drupal.tar.gz \
	&& tar -xz --strip-components=1 -f drupal.tar.gz \
	&& rm drupal.tar.gz 

# Add a way to send mail out, assuming the host can do mail at port 25. The initialize.sh script sets up an entry in /etc/hosts to make it "easy".
# Use iproute2 to figure my ip route out to the host.
# Install openssh-client for outgoing https requests!
RUN apt-get update && apt-get install -y msmtp openssh-client iproute2 git libmcrypt-dev && \
  pecl install -o redis && docker-php-ext-enable redis && \
  pecl install -o mcrypt-1.0.4 && docker-php-ext-enable mcrypt && \
  pecl install -o imagick-3.4.3 && docker-php-ext-enable imagick && \
  docker-php-ext-install exif && \
  apt-get clean && \
  echo 'sendmail_path = "/usr/bin/msmtp -C /etc/msmtprc -t"' > /usr/local/etc/php/conf.d/mail.ini
COPY msmtprc /etc/msmtprc
# tell apache how to handle the varnish+hitch proxying
RUN echo 'SetEnvIf X-Forwarded-Proto https HTTPS=on' >> /var/www/html/.htaccess
# increase php timeout and other customizations
COPY vhttp.ini /usr/local/etc/php/conf.d/
COPY vhttp.conf /etc/apache2/conf-available/
RUN a2enconf vhttp && a2enmod expires
# initialize needs to run after the container has been created. 
COPY initialize.sh /usr/local/bin/initialize.sh
RUN chmod u+x /usr/local/bin/initialize.sh 
# CMD["apache2-foreground"]
CMD /usr/local/bin/initialize.sh && apache2-foreground
# done with vhttp, now add the admin bits
FROM vhttp as admin
# an extended version of the webserver image, adding extra packages and scripts
RUN apt-get update \
  && apt-get install -y mariadb-client sudo vim zip unzip netcat ssh rsync \
  && apt-get purge -y
# we only still need to do this for Drupal 7
COPY drush.phar /usr/local/bin/drush
COPY wait-for-it.sh /usr/local/bin/wait-for-it.sh
# We create a drupal user to own all the code, using Dries birth year as the uid
RUN useradd -u 1978 -g www-data -ms /bin/bash drupal
# A customized/simplified version of the settings.php file
COPY default.settings.php settings.php /usr/local/src/
# A bunch of convenience scripts
COPY admin.sh admindb.sh restoredb.sh restorefiles.sh restorevsite.sh setup.sh wait-for-it.sh backupdb.sh backupsite.sh /usr/local/bin/
RUN chmod ugo+x /usr/local/bin/drush && chmod ugo+x /usr/local/bin/*.sh 
# The apache for the container shouldn't actually be functional, it doesn't get invoked, so minimize it's resource use.
COPY admin.conf /etc/apache2/conf-available
RUN a2enconf admin
# get a copy of the registry_rebuild drush command because it's so useful
RUN mkdir /var/www/.drush && chown www-data:www-data /var/www/.drush && sudo -E -u www-data drush -y @none dl --destination=/var/www/.drush registry_rebuild-7.x
# CMD["apache2-foreground"]
# Run the same initialization script that the web (drupal) does.
CMD /usr/local/bin/initialize.sh && apache2-foreground
